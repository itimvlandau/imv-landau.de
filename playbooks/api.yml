---
- hosts: localhost
  gather_facts: true # (we don't need to check the connectivity between master and other nodes)
  become: true
  vars_files:
    - ./vars/vars.yml

  pre_tasks:
    - name: Update apt cache.
      apt: update_cache=true cache_valid_time=600
      when: ansible_os_family == 'Debian'
      changed_when: false

    - name: Upgrade apt packages
      become: true
      apt:
        upgrade: dist

    - name: "Install apt packages"
      apt:
        name: "{{ apt_packages }}"
        state: latest

    - name: Set bashrc files
      import_tasks: tasks/bashrc.yml

  tasks:
    - name: Install NGINX
      include_role:
        name: nginxinc.nginx
      vars:
        nginx_debug_output: true
        nginx_selinux: true
        nginx_selinux_tcp_ports:
          - 80
          - 443
        nginx_logrotate_conf_enable: true
        nginx_logrotate_conf:
          paths:
            - /var/log/nginx/*.log
          options:
            - daily
            - missingok
            - rotate 14
            - compress
            - delaycompress
            - notifempty
            - sharedscripts

    - name: Prepare to install the correct PHP version
      include_role:
        name: geerlingguy.php-versions

    - name: Install PHP
      include_role:
        name: geerlingguy.php

    # remove the default nginx site
    - name: Remove the default configuration
      file:
        path: "{{ nginx_config_root }}/conf.d/default.conf"
        state: absent
      become: true
      become_user: root

    # setup the nginx config.
    - name: Update nginx config
      template:
        src: nginx.api.conf.j2
        dest: "{{ nginx_config_root }}/conf.d/{{ api_server_name }}.conf"
        owner: "{{ user }}"
        mode: 0644
      become: true
      become_user: root

    - name: Install composer
      include_role:
        name: geerlingguy.composer

    - name: Restart nginx
      service:
        name: nginx
        state: restarted
      become: true
      become_user: root
